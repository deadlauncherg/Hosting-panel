<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - <%= typeof settings !== 'undefined' && settings.name ? settings.name : 'Dashboard' %></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* Your existing CSS styles remain unchanged */
        :root {
            --primary: #7289da;
            --primary-dark: #5b6eae;
            --secondary: #1e1e2e;
            --secondary-light: #2a2a3e;
            --accent: #43b581;
            --danger: #ed4245;
            --warning: #faa81a;
            --text: #ffffff;
            --text-muted: #a0a0c0;
            --border: rgba(255, 255, 255, 0.1);
            --card-bg: rgba(30, 30, 46, 0.8);
            --sidebar-width: 260px;
            --header-height: 70px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            color: var(--text);
            min-height: 100vh;
            display: flex;
        }

        /* Sidebar Styles */
        .sidebar {
            width: var(--sidebar-width);
            background: var(--secondary);
            height: 100vh;
            position: fixed;
            overflow-y: auto;
            padding: 20px 0;
        }

        .sidebar-header {
            padding: 0 20px 20px;
            border-bottom: 1px solid var(--border);
            margin-bottom: 15px;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: var(--text-muted);
            text-decoration: none;
            transition: all 0.3s;
        }

        .nav-item:hover {
            background: var(--secondary-light);
            color: var(--text);
        }

        .nav-item.active {
            background: var(--primary);
            color: white;
        }

        .nav-item i {
            width: 24px;
            margin-right: 12px;
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            padding: 20px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px;
            background: var(--secondary-light);
            border-radius: 10px;
            margin-bottom: 20px;
        }

        .user-info {
            display: flex;
            align-items: center;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 12px;
            border: 2px solid var(--primary);
        }

        .user-details h3 {
            font-size: 1rem;
        }

        .user-details p {
            font-size: 0.8rem;
            color: var(--text-muted);
        }

        .logout-btn {
            background: var(--danger);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.3s ease;
            display: flex;
            align-items: center;
        }

        .logout-btn:hover {
            background: #c03537;
        }

        .logout-btn i {
            margin-right: 6px;
        }

        /* Dashboard Grid */
        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .card {
            background: var(--card-bg);
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .card-title {
            font-size: 1.2rem;
        }

        .card-icon {
            color: var(--primary);
            font-size: 1.5rem;
        }

        /* Health Status */
        .health-status {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        .health-icon {
            width: 50px;
            height: 50px;
            background: var(--accent);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            font-size: 1.5rem;
        }

        .server-status {
            display: flex;
            align-items: center;
            color: var(--accent);
        }

        .status-indicator {
            width: 10px;
            height: 10px;
            background: var(--accent);
            border-radius: 50%;
            margin-right: 10px;
        }

        /* Resource Styles */
        .resource {
            margin-bottom: 15px;
        }

        .resource-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 5px;
        }

        .progress-bar {
            height: 8px;
            background: var(--secondary-light);
            border-radius: 4px;
            overflow: hidden;
        }

        .progress {
            height: 100%;
            border-radius: 4px;
        }

        .progress-ram {
            background: var(--primary);
        }

        .progress-cpu {
            background: var(--warning);
        }

        .progress-disk {
            background: var(--accent);
        }

        .progress-slots {
            background: var(--danger);
        }

        /* Coin Price */
        .coin-price {
            font-size: 2rem;
            font-weight: bold;
            margin: 10px 0;
        }

        .coin-change {
            display: flex;
            align-items: center;
            color: var(--accent);
            margin-bottom: 15px;
        }

        .coin-change.negative {
            color: var(--danger);
        }

        .chart-container {
            height: 150px;
            margin-top: 15px;
        }

        /* Server List */
        .server-list {
            max-height: 300px;
            overflow-y: auto;
        }

        .server-actions {
            display: flex;
        }

        .create-server-btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
        }

        .create-server-btn i {
            margin-right: 5px;
        }

        /* Market Table */
        .market-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }

        .market-table th, .market-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid var(--border);
        }

        .market-table th {
            color: var(--text-muted);
            font-weight: normal;
        }

        .price-up {
            color: var(--accent);
        }

        .price-down {
            color: var(--danger);
        }

        .market-refresh {
            background: var(--primary);
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            display: flex;
            align-items: center;
        }

        .market-refresh i {
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h2><%= typeof settings !== 'undefined' && settings.name ? settings.name : 'Dashboard' %></h2>
        </div>

        <a href="/dashboard" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'dashboard' ? 'active' : '' %>">
            <i class="fas fa-home"></i>
            <span>Dashboard</span>
        </a>

        <a href="/servers" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'servers' ? 'active' : '' %>">
            <i class="fas fa-server"></i>
            <span>My Servers</span>
        </a>

        <a href="/servers/new" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'create' ? 'active' : '' %>">
            <i class="fas fa-plus"></i>
            <span>Create Server</span>
        </a>

        <a href="/afk" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'afk' ? 'active' : '' %>">
            <i class="fas fa-coins"></i>
            <span>AFK Earnings</span>
        </a>

        <a href="/profile" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'servers' ? 'active' : '' %>">
            <i class="fa-solid fa-id-card"></i>
            <span>My Profile</span>
        </a>

        <a href="/earn" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'earn' ? 'active' : '' %>">
            <i class="fas fa-money-bill-wave"></i>
            <span>Earn Coins</span>
        </a>

        <a href="/promotion" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'promotion' ? 'active' : '' %>">
            <i class="fas fa-bullhorn"></i>
            <span>Promotion</span>
        </a>

        <a href="/stock" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'stock' ? 'active' : '' %>">
            <i class="fas fa-chart-line"></i>
            <span>Stock Market</span>
        </a>

        <a href="/store" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'store' ? 'active' : '' %>">
            <i class="fas fa-microchip"></i>
            <span>Resources</span>
        </a>

        <a href="/security" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'settings' ? 'active' : '' %>">
            <i class="fas fa-cog"></i>
            <span>Settings</span>
        </a>

        <a href="/transfer" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'transfer' ? 'active' : '' %>">
            <i class="fa-solid fa-money-bill-transfer"></i>
            <span>Transfer Coin</span>
        </a>

        <% if (typeof user !== 'undefined' && user.role === 'admin') { %>
            <a href="/admin" class="nav-item <%= typeof currentPage !== 'undefined' && currentPage === 'admin' ? 'active' : '' %>">
                <i class="fas fa-shield-alt"></i>
                <span>Admin Panel</span>
            </a>
        <% } %>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header -->
        <div class="header">
            <div class="user-info">
                <% if (typeof user !== 'undefined' && user.avatar) { %>
                    <img src="<%= user.avatar %>" alt="Avatar" class="user-avatar">
                <% } else { %>
                    <div class="user-avatar" style="background: var(--primary); display: flex; align-items: center; justify-content: center;">
                        <i class="fas fa-user"></i>
                    </div>
                <% } %>
                <div class="user-details">
                    <h3><%= typeof user !== 'undefined' ? user.username : 'Guest' %></h3>
                    <p>Balance: <span id="user-balance"><%= typeof coins !== 'undefined' ? coins.toFixed(2) : '0.00' %></span> coins</p>
                </div>
            </div>

            <button class="logout-btn" onclick="location.href='/logout'">
                <i class="fas fa-sign-out-alt"></i>
                Logout
            </button>
        </div>

        <!-- Dashboard Grid -->
        <div class="dashboard-grid">
            <!-- Account Health Card -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Account Health</h3>
                    <div class="card-icon">
                        <i class="fas fa-heart"></i>
                    </div>
                </div>

                <div class="health-status">
                    <div class="health-icon">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="health-details">
                        <h3>Excellent</h3>
                        <p>Your account is in good standing</p>
                    </div>
                </div>

                <div class="server-status">
                    <div class="status-indicator"></div>
                    <span>All systems operational</span>
                </div>
            </div>

            <!-- Resources Card -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Resources</h3>
                    <div class="card-icon">
                        <i class="fas fa-microchip"></i>
                    </div>
                </div>

                <div class="resource">
                    <div class="resource-header">
                        <span class="resource-name">RAM</span>
                        <span class="resource-value" id="ram-value">
                            <% 
                                let ramUsed = 0;
                                let ramTotal = 0;
                                if (typeof packages !== 'undefined' && typeof extraresources !== 'undefined' && typeof pterodactyl !== 'undefined') {
                                    ramTotal = packages.ram + extraresources.ram;
                                    if (pterodactyl.relationships && pterodactyl.relationships.servers && pterodactyl.relationships.servers.data) {
                                        for (let i = 0; i < pterodactyl.relationships.servers.data.length; i++) {
                                            ramUsed += pterodactyl.relationships.servers.data[i].attributes.limits.memory || 0;
                                        }
                                    }
                                }
                            %>
                            <%= (ramUsed / 1024).toFixed(1) %> GiB / <%= (ramTotal / 1024).toFixed(1) %> GiB
                        </span>
                    </div>
                    <div class="progress-bar">
                        <div class="progress progress-ram" id="ram-progress" style="width: <%= ramTotal > 0 ? (ramUsed / ramTotal * 100).toFixed(1) : 0 %>%;"></div>
                    </div>
                </div>

                <div class="resource">
                    <div class="resource-header">
                        <span class="resource-name">CPU</span>
                        <span class="resource-value" id="cpu-value">
                            <%
                                let cpuUsed = 0;
                                let cpuTotal = 0;
                                if (typeof packages !== 'undefined' && typeof extraresources !== 'undefined' && typeof pterodactyl !== 'undefined') {
                                    cpuTotal = packages.cpu + extraresources.cpu;
                                    if (pterodactyl.relationships && pterodactyl.relationships.servers && pterodactyl.relationships.servers.data) {
                                        for (let i = 0; i < pterodactyl.relationships.servers.data.length; i++) {
                                            cpuUsed += pterodactyl.relationships.servers.data[i].attributes.limits.cpu || 0;
                                        }
                                    }
                                }
                            %>
                            <%= (cpuUsed / 100).toFixed(1) %> / <%= (cpuTotal / 100).toFixed(1) %> Cores
                        </span>
                    </div>
                    <div class="progress-bar">
                        <div class="progress progress-cpu" id="cpu-progress" style="width: <%= cpuTotal > 0 ? (cpuUsed / cpuTotal * 100).toFixed(1) : 0 %>%;"></div>
                    </div>
                </div>

                <div class="resource">
                    <div class="resource-header">
                        <span class="resource-name">Disk</span>
                        <span class="resource-value" id="disk-value">
                            <%
                                let diskUsed = 0;
                                let diskTotal = 0;
                                if (typeof packages !== 'undefined' && typeof extraresources !== 'undefined' && typeof pterodactyl !== 'undefined') {
                                    diskTotal = packages.disk + extraresources.disk;
                                    if (pterodactyl.relationships && pterodactyl.relationships.servers && pterodactyl.relationships.servers.data) {
                                        for (let i = 0; i < pterodactyl.relationships.servers.data.length; i++) {
                                            diskUsed += pterodactyl.relationships.servers.data[i].attributes.limits.disk || 0;
                                        }
                                    }
                                }
                            %>
                            <%= (diskUsed / 1024).toFixed(1) %> GiB / <%= (diskTotal / 1024).toFixed(1) %> GiB
                        </span>
                    </div>
                    <div class="progress-bar">
                        <div class="progress progress-disk" id="disk-progress" style="width: <%= diskTotal > 0 ? (diskUsed / diskTotal * 100).toFixed(1) : 0 %>%;"></div>
                    </div>
                </div>

                <div class="resource">
                    <div class="resource-header">
                        <span class="resource-name">Server Slots</span>
                        <span class="resource-value" id="slots-value">
                            <%
                                let slotsUsed = 0;
                                let slotsTotal = 0;
                                if (typeof packages !== 'undefined' && typeof extraresources !== 'undefined' && typeof pterodactyl !== 'undefined') {
                                    slotsTotal = packages.servers + extraresources.servers;
                                    if (pterodactyl.relationships && pterodactyl.relationships.servers && pterodactyl.relationships.servers.data) {
                                        slotsUsed = pterodactyl.relationships.servers.data.length;
                                    }
                                }
                            %>
                            <%= slotsUsed %> / <%= slotsTotal %>
                        </span>
                    </div>
                    <div class="progress-bar">
                        <div class="progress progress-slots" id="slots-progress" style="width: <%= slotsTotal > 0 ? (slotsUsed / slotsTotal * 100).toFixed(1) : 0 %>%;"></div>
                    </div>
                </div>
            </div>

            <!-- Real-time Coin Card -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Server Coin</h3>
                    <div class="card-icon">
                        <i class="fas fa-coins"></i>
                    </div>
                </div>

                <div class="coin-price" id="coin-price">$<%= typeof coinValue !== 'undefined' ? coinValue.toFixed(2) : '4.32' %></div>
                <div class="coin-change" id="coin-change">
                    <i class="fas fa-arrow-up"></i>
                    <span>+2.4% (24h)</span>
                </div>

                <div class="chart-container">
                    <canvas id="coinChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Server Status Card -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Active Servers</h3>
                <div class="card-icon">
                    <i class="fas fa-server"></i>
                </div>
            </div>

            <% if (typeof pterodactyl !== 'undefined' && pterodactyl.relationships && pterodactyl.relationships.servers && pterodactyl.relationships.servers.data && pterodactyl.relationships.servers.data.length > 0) { %>
                <div class="server-list">
                    <% pterodactyl.relationships.servers.data.forEach(server => { %>
                        <div class="server-item" style="padding: 15px; border-bottom: 1px solid var(--border);">
                            <div style="display: flex; justify-content: space-between; align-items: center;">
                                <div>
                                    <h4><%= server.attributes.name %></h4>
                                    <p style="color: var(--text-muted); font-size: 0.9rem;">Status: <span style="color: var(--accent);">Running</span></p>
                                </div>
                                <div class="server-actions">
                                    <button class="server-btn" style="background: var(--primary); color: white; border: none; padding: 5px 10px; border-radius: 4px; margin-left: 5px;">
                                        <i class="fas fa-play"></i>
                                    </button>
                                    <button class="server-btn" style="background: var(--warning); color: white; border: none; padding: 5px 10px; border-radius: 4px; margin-left: 5px;">
                                        <i class="fas fa-redo"></i>
                                    </button>
                                    <button class="server-btn" style="background: var(--danger); color: white; border: none; padding: 5px 10px; border-radius: 4px; margin-left: 5px;">
                                        <i class="fas fa-stop"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <div style="text-align: center; padding: 30px 0;">
                    <i class="fas fa-server" style="font-size: 3rem; color: var(--text-muted); margin-bottom: 15px;"></i>
                    <h3>No active servers</h3>
                    <p style="color: var(--text-muted); margin: 10px 0 20px;">You don't have any servers running</p>
                    <button class="create-server-btn" onclick="location.href='/create'">
                        <i class="fas fa-plus"></i>
                        Create a Server
                    </button>
                </div>
            <% } %>
        </div>

        <!-- Coin Market Section -->
        <div class="card" style="margin-top: 20px;">
            <div class="card-header">
                <h3 class="card-title">Coin Market</h3>
                <button class="market-refresh" id="refresh-market">
                    <i class="fas fa-sync-alt"></i> Refresh
                </button>
            </div>
            <table class="market-table">
                <thead>
                    <tr>
                        <th>Coin</th>
                        <th>Price</th>
                        <th>24h Change</th>
                        <th>Market Cap</th>
                    </tr>
                </thead>
                <tbody id="market-data">
                    <tr>
                        <td>Server Coin (SC)</td>
                        <td id="market-price">$<%= typeof coinValue !== 'undefined' ? coinValue.toFixed(2) : '4.32' %></td>
                        <td class="price-up" id="market-change">+2.4%</td>
                        <td id="market-cap">$542.6M</td>
                    </tr>
                    <tr>
                        <td>Bitcoin (BTC)</td>
                        <td>$61,423.78</td>
                        <td class="price-up">+1.2%</td>
                        <td>$1.21T</td>
                    </tr>
                    <tr>
                        <td>Ethereum (ETH)</td>
                        <td>$3,412.56</td>
                        <td class="price-down">-0.8%</td>
                        <td>$409.3B</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // Real-time coin price simulation
        let currentCoinValue = <%= typeof coinValue !== 'undefined' ? coinValue : 4.32 %>;

        function updateCoinPrice() {
            const change = (Math.random() - 0.5) * 0.8;
            currentCoinValue = Math.max(0.1, currentCoinValue + change);
            const percentChange = change / (currentCoinValue - change) * 100;

            document.getElementById('coin-price').textContent = '$' + currentCoinValue.toFixed(2);
            document.getElementById('market-price').textContent = '$' + currentCoinValue.toFixed(2);

            const changeElement = document.getElementById('coin-change');
            const marketChangeElement = document.getElementById('market-change');

            if (percentChange >= 0) {
                changeElement.innerHTML = '<i class="fas fa-arrow-up"></i><span>+' + percentChange.toFixed(2) + '% (24h)</span>';
                changeElement.classList.remove('negative');
                marketChangeElement.textContent = '+' + percentChange.toFixed(2) + '%';
                marketChangeElement.className = 'price-up';
            } else {
                changeElement.innerHTML = '<i class="fas fa-arrow-down"></i><span>' + percentChange.toFixed(2) + '% (24h)</span>';
                changeElement.classList.add('negative');
                marketChangeElement.textContent = percentChange.toFixed(2) + '%';
                marketChangeElement.className = 'price-down';
            }

            // Update chart
            updateChartData();
        }

        // Initialize coin chart
        const ctx = document.getElementById('coinChart').getContext('2d');
        const coinChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: Array(24).fill(0).map((_, i) => i + 'h'),
                datasets: [{
                    label: 'Server Coin',
                    data: Array(24).fill(0).map(() => Math.random() * 2 + 3),
                    borderColor: '#7289da',
                    backgroundColor: 'rgba(114, 137, 218, 0.1)',
                    tension: 0.4,
                    fill: true,
                    pointRadius: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            color: '#a0a0c0'
                        }
                    },
                    y: {
                        display: false,
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });

        // Update chart data
        function updateChartData() {
            const currentData = coinChart.data.datasets[0].data;

            // Shift data left and add new value
            currentData.shift();
            currentData.push(currentCoinValue);

            coinChart.update();
        }

        // Update coin price every 10 seconds
        setInterval(updateCoinPrice, 10000);

        // Refresh market data
        document.getElementById('refresh-market').addEventListener('click', function() {
            updateCoinPrice();

            // Show refreshing animation
            this.innerHTML = '<i class="fas fa-circle-notch fa-spin"></i> Refreshing';

            // Reset after 1 second
            setTimeout(() => {
                this.innerHTML = '<i class="fas fa-sync-alt"></i> Refresh';
            }, 1000);
        });

        // Highlight active page in navigation
        document.addEventListener('DOMContentLoaded', function() {
            const currentPath = window.location.pathname;
            const navLinks = document.querySelectorAll('.nav-item');

            navLinks.forEach(link => {
                if (link.getAttribute('href') === currentPath) {
                    link.classList.add('active');
                } else {
                    link.classList.remove('active');
                }
            });
        });
    </script>
</body>
</html>